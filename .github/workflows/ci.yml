# We need a multi-job workflow file (in contrast to a multi-workflow setup with
# gh-pages.yml + tests.yml, as in https://github.com/elcorto/psweep for
# instance) to test job dependencies (pages depends on tests) on branches (such
# as test-ci) which are not the default branch. Well OK.
#
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
# https://stackoverflow.com/a/65081720

name: tests

on:
  push:
    branches:
      - master
      - test-ci

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          ##- "3.9"
          ##- "3.10"
          - "3.11"
      fail-fast: true

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: pysetup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: install
        run: |
          sudo apt update

          # For Fortran extensions
          sudo apt install -y --no-install-recommends \
            python3-dev gfortran liblapack-dev

          sudo apt install -y --no-install-recommends \
            lammps quantum-espresso

          pip install -e .
          pip install -r requirements_optional.txt
          pip install -r requirements_test.txt

      - name: run tests
        run: |
          cd test

          # dcd test fails in CI, passes locally, skip for now
          ./runtests.sh --nobuild -n8 --ignore=test_dcd.py

  pages:
    needs: tests
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v4

      - name: pysetup
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: install
        run: |
          sudo apt update

          # For Fortran extensions
          sudo apt install -y --no-install-recommends \
            python3-dev gfortran liblapack-dev

          # sphinx related
          pip install -r requirements_doc.txt

          # sphinx-autodoc needs target package to be installed
          pip install -e .

      - name: build
        run: |
          cd doc
          sh generate-doc.sh

      - name: deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # base dir is checkout: /path/to/psweep
          publish_dir: doc/build/html
