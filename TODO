crys.py
-------
* All *3d() funcs use simple loops currently. This is slow. Find vectorized
  versions or re-implement in Fortran (flib.f90) / Cython / ...
* Structure / Trajectory: Instead of cryst_const, store abc+angles, apply
  length unit to abc and derive cell + cryst_const from abc+angles  

pydos.py
--------
* unify vacf_pdos(), direct_pdos(), they have almost the same signature and
  functionality, use a kwarg 'method' to select the method of calculation

* let *_pdos() return one 2d arry with several columns, like crys.rpdf()

* PDOS normalization. ATM we normalize so that Int(faxis, pdos) = area = 1.0. 
  But there may be others, like area = 3*natoms in the unit cell (not
  supercell), ...

all
---
* Drop verbose.py. Use the logging or warnings module.
* In some modules, we changed absolute to relative imports. 
  If we keep this, change in all modules.

cmd line tools in bin/
----------------------
* We now have abi2axsf.py and cpmd2axsf.py, where the latter is capable of
  doing more nice things like buildung a supercell of the trajectory. If we
  need this machinery for pw.x output too, then it's time to write pwo2axsf.py
  as a replacement for xcrysden's pwo2xsf.sh . Maybe unify all into smth like 
  any2axsf.py. However, whith the new API, we may not need that anymore. Just
  use smth like
  >>> traj = parse.SomeMDParser(...).get_traj()
  >>> sc = crys.scell3d(traj, (3,3,3))
  >>> io.write_axsf('foo_3x3x3.axsf', sc)

parse.py
--------
* Check where we can use ``grep -m ...`` instead of ``grep ... | head -n1`` and
  such. This may speed things up a little.

tests
-----
* Handle known fails with nose.
* In all test/test_*.py files, rename function test() -> test_<something>(), so
  that ``nosetests --exclude='.*<something>.*'`` works. 

plotting dispersions
--------------------
* Finish functions for parsing and plotting dispersions (pwscf.py, kpath.py).
  Remove unused and redundant stuff.

# vim:comments=fb\:*
